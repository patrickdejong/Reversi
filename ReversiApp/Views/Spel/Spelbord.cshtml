@model ReversiApp.Models.Spel
@{
    ViewData["Title"] = "Spelbord";
    Layout = null;
    Kleur winning = Model.OverwegendeKleur();
    string winningPlayer;
    if (winning == Kleur.Zwart) {
        winningPlayer = "Black";
    } else if(winning == Kleur.Wit) {
        winningPlayer = "White";
    }
    else {
        winningPlayer = "Everyone";
    }
    bool gameEnded = Model.Afgelopen();
    if (Model.Token == "WhiteSurrenders") {
        winningPlayer = "Black";
        gameEnded = true;
    }
    if (Model.Token == "BlackSurrenders") {
        winningPlayer = "White";
        gameEnded = true;
    }
}

<!DOCTYPE html>
<html lang="en">

<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js"></script>
    <meta charset="UTF-8">
    <title>Javascript getting started</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="~/css/style.min.css">
    <link rel="stylesheet" type="text/css" href="~/css/site.css">

    <script src="~/js/app.js"></script>
    <script src="~/js/vendor.js"></script>
    <script src="~/js/templates.js"></script>

</head>
<body>
    <script>
        (function () {
            poll = function () {
                Game.Reversi.showBord("@Model.Token");
            },
                pollInterval = setInterval(function () { // run function every ... ms
                    poll();
                }, 5000);
        })();
    </script>




    <div style="float:right;padding-right:15px;">
        <h4><a asp-action="Logout">Logout</a></h4>
        @if (Model.Spelers.Count < 2) {
            <h4><a asp-action="ExitSoloGame">Exit match</a></h4>
        }
    </div>
    <header style="visibility: hidden" id="feedback-success" class="header--state-success" role="alert"><img src="https://image.flaticon.com/icons/svg/1828/1828743.svg" class="img--icon-success"> Mike wil deelnemen aan jouw spel. Ga je akkoord? <button id="Kruisje" class="button--exit" onclick="fadeOut()">X</button> <button id="Akkoord" class="button--accept" onclick="fadeOut()">Akkoord</button> <button id="Weigeren" onclick="fadeOut()">Weigeren</button></header>

    <div style="text-align:center">
        @if (gameEnded) {
            <h1>@winningPlayer won!</h1>
        }
        else {
            <h4 style="align-self:center">Currently winning: @winningPlayer</h4>
        }
    </div>
    <div class="canvas--class" style="display:inline-flex;float:left">
        <canvas id="myChart"></canvas>
    </div>
    <div style="display:flex;">
        <script>function fadeOut() { $("header").fadeOut(1e3) } function afterInit() { console.log("Game init voltooid") }</script>
        <table id="spelbord" style="margin-left:15%;display:block;">
        </table>
        <script>
            Game.Reversi.showBord("@Model.Token");
        </script>

        <div style="text-align:center;margin-left:5%">
            <h3>Description: @Html.DisplayFor(modelItem => Model.Omschrijving)</h3><br />
            @if (Model.Spelers.Count < 2) {
                <form asp-action="EditOmschrijving">
                    <input name="oudedef" value="@Model.Omschrijving" hidden />
                    <input name="omschrijving" placeholder="A new name" />
                    <button type="submit">Rename game</button>
                </form>
            }

            <h4>Turn: @Model.AandeBeurt</h4>

            <h3>Players:</h3>
            @foreach (Speler speler in Model.Spelers) {
                if (speler.Kleur == Kleur.Zwart) {
                    <h4>Black: @Html.DisplayFor(modelItem => speler.Naam)</h4>
                }
                else if (speler.Kleur == Kleur.Wit) {
                    <h4>White: @Html.DisplayFor(modelItem => speler.Naam)</h4>
                }
                else {
                    <h4>?: @Html.DisplayFor(modelItem => speler.Naam)</h4>
                }

            }
        </div>
    </div>
    <footer>
        @if (gameEnded == false) {
            <a class="btn btn-primary" asp-action="Pass">Pass</a>
            <a class="btn btn-primary" asp-action="Surrender">Surrender</a>

        }
        else {
            <a class="btn btn-primary" asp-action="ExitGame">Exit game</a>
        }
    </footer>

    <script>
        var whiteStones = Game.Stats.getWhiteStones(@Model.Token);
        var blackStones = Game.Stats.getBlackStones(@Model.Token);
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['White', 'Black'],
                datasets: [{
                    label: '# of Pieces',
                    data: [whiteStones, 0],
                    backgroundColor: [
                        'rgba(255, 255, 255, 0.8)',
                        'rgba(0, 0, 0, 0.6)'
                    ],
                    borderColor: [
                        'rgba(0, 0, 0, 1)',
                        'rgba(255, 255, 255, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            userCallback: function (label, index, labels) {
                                // when the floored value is the same as the value we have a whole number
                                if (Math.floor(label) === label) {
                                    return label;
                                }
                            }
                        }
                    }]
                }
            }
        });
    </script>

</body>
</html>

